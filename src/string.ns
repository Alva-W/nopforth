\ SPDX-License-Identifier: MIT
\ Copyright (c) 2018-2022 IruatÃ£ Martins dos Santos Souza

forth
32 value bl

: emit ( b -> )   [ here dup 0 1, ] lit  1!  lit 1 type ;

: cr      10 emit ;
: space   bl emit ;
: spaces ( u -> )   for space next ;

: printable? ( c -> flag )    bl 127 within ;

: char ( -> b )     bl parse drop 1@ ;
macro
: [char] ( -> b )   char ` lit ;
forth

: s>z ( a u -> a' )     here push  dup allot  r@ swap move  0 1,  pop ;
: zlen ( a -> u )       a! 0 begin 1@+ while 1 + repeat ;
: z" ( -> a )           [char] " parse s>z ;
: z>mem ( a -> a' u )   dup zlen ;

macro
: memlit ( a len -> )
   here ` lit  dup ` lit  mem, ;

macro : "   [char] " parse  ` memlit ;
forth : " ( -> a u )
  [char] " parse  tuck  here dup push  over allot  swap move  pop swap ;

: println   type cr ;

macro : ."   ` "  [f'] type call, ;
forth : ."   [char] " parse type ;


: depth ( -> u )   S0 sp@ - cell /  2 - ;

