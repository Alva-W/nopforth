\ SPDX-License-Identifier: MIT
\ Copyright (c) 2018-2020 IruatÃ£ Martins dos Santos Souza

forth
0 value 'rel
: rel   'rel execute ;

0 value 'warm
: warm   'warm dup if execute then  bye ;

: .abort ( a u -> )
   dup 0 ~= if type cr exit then  drop
   inbuf @ inpos @ type  [char] ? emit cr ;

: abort ( a u -> )         .abort reset-input resetstacks warm ;
: ?abort ( flag a u -> )   2push  if 2pop abort then  2pop 2drop ;

: ?underflow
   depth 0 >= if exit then
   " stack underflow!" println  0 0 abort ;

: evaluate
   next-word dup 0 = if  2drop exit  then
   eval ?underflow evaluate ;

variable 'refill  \ must be set before use
: refill               'refill @ execute ;
: refilled? ( -> n )   inpos @ inused @ ~= if true exit then  refill ;

anon: begin refilled? while evaluate repeat ;  to 'rel
