\ SPDX-License-Identifier: MIT
\ Copyright (c) 2018-2022 IruatÃ£ Martins dos Santos Souza

: arch-lib
   here " nop/clib/" dup push  mem,  NOPARCH dup push mem,
   pop pop + ;

arch-lib floaded

1 value RTLD_LAZY

: errorstr ( -> a u )   dlerror dup if z>mem exit then  0 ;
: ?clib-abort ( flag -> )   errorstr ?abort ;

: clib-load ( a u -> handle )
   dup if  s>z  else  2drop 0  then
   RTLD_LAZY dlopen dup 0 = ?clib-abort ;

: clib-symbol ( handle a u -> 'func )
   s>z dlsym dup 0 = ?clib-abort ;

: cfunc>entry ( handle Cname #Cname nopname #nopname -> 'func )
   2push clib-symbol  2pop entry,  codep @ swap >cfa ! ;


: callC0  \ no input arguments, only create space for return value
   ` dup ;

: callC, ( #ret #args 'func -> )
   push  prolog,
   dup 5 > " too many arguments to C function" ?abort
   dup 4 > if callC5 then
   dup 3 > if callC4 then
   dup 2 > if callC3 then
   dup 1 > if callC2 then
       0 > if callC1 else
              callC0 then
   pop call,  0 = if ` drop then  epilog, ` exit ;

forth

( User API )
0 value handle

: library:
   handle if handle dlclose drop then
   word clib-load to handle ;

: Cfunction: ( #args #ret "Cname" "nopname" -> )
   swap  handle word word cfunc>entry  callC, ;
